{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0,\n    countShown: true\n  },\n  reducers: {\n    increment(state) {\n      state.count++;\n    },\n    decrement(state) {\n      state.count--;\n    },\n    increase(state, action) {\n      state.count = state.count + action.payload;\n    },\n    toggler(state) {\n      state.countShown = !state.countShown;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    authAuthentication: false\n  },\n  reducers: {\n    login(state) {\n      state.authAuthentication = true;\n    },\n    logout(state) {\n      state.authAuthentication = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const sliceActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","counterSlice","name","initialState","count","countShown","reducers","increment","state","decrement","increase","action","payload","toggler","authSlice","authAuthentication","login","logout","store","reducer","counter","auth","sliceActions","actions","authActions"],"sources":["/home/arham/workspace/Redux-Counter/src/store/index.js"],"sourcesContent":["import {createSlice, configureStore} from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n    name:\"counter\",\n    initialState: {count:0, countShown: true},\n    reducers:{\n        increment(state){\n             state.count++\n        },\n        decrement(state){\n            state.count--\n        },\n        increase(state,action){\n            state.count = state.count + action.payload\n        },\n        toggler(state){\n            state.countShown = ! state.countShown\n        }\n    }\n});\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState: {authAuthentication:false},\n    reducers:{\n        login(state){\n            state.authAuthentication= true;\n        },\n        logout(state){\n            state.authAuthentication= false;\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer: {counter:counterSlice.reducer,auth:authSlice.reducer }\n});\nexport const sliceActions = counterSlice.actions \nexport const authActions = authSlice.actions;\nexport default store;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAC,SAAS;EACdC,YAAY,EAAE;IAACC,KAAK,EAAC,CAAC;IAAEC,UAAU,EAAE;EAAI,CAAC;EACzCC,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACXA,KAAK,CAACJ,KAAK,EAAE;IAClB,CAAC;IACDK,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACJ,KAAK,EAAE;IACjB,CAAC;IACDM,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,OAAOA,CAACL,KAAK,EAAC;MACVA,KAAK,CAACH,UAAU,GAAG,CAAEG,KAAK,CAACH,UAAU;IACzC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMS,SAAS,GAAGf,WAAW,CAAC;EAC1BG,IAAI,EAAC,MAAM;EACXC,YAAY,EAAE;IAACY,kBAAkB,EAAC;EAAK,CAAC;EACxCT,QAAQ,EAAC;IACLU,KAAKA,CAACR,KAAK,EAAC;MACRA,KAAK,CAACO,kBAAkB,GAAE,IAAI;IAClC,CAAC;IACDE,MAAMA,CAACT,KAAK,EAAC;MACTA,KAAK,CAACO,kBAAkB,GAAE,KAAK;IACnC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMG,KAAK,GAAGlB,cAAc,CAAC;EACzBmB,OAAO,EAAE;IAACC,OAAO,EAACnB,YAAY,CAACkB,OAAO;IAACE,IAAI,EAACP,SAAS,CAACK;EAAQ;AAClE,CAAC,CAAC;AACF,OAAO,MAAMG,YAAY,GAAGrB,YAAY,CAACsB,OAAO;AAChD,OAAO,MAAMC,WAAW,GAAGV,SAAS,CAACS,OAAO;AAC5C,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}